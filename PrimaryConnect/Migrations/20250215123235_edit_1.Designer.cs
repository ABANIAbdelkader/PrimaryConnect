// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrimaryConnect.Data;

#nullable disable

namespace PrimaryConnect.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250215123235_edit_1")]
    partial class edit_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrimaryConnect.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsJustified")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("student_Id");

                    b.ToTable("absences");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permitions")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("School_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("School_Id");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HomeworkPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Teacher_Id")
                        .HasColumnType("int");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("Teacher_Id");

                    b.HasIndex("student_Id");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("events");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Event_Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Event_Id")
                        .HasColumnType("int");

                    b.Property<int>("student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Event_Id");

                    b.HasIndex("student_Id");

                    b.ToTable("events_Students");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Marks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Arab")
                        .HasColumnType("int");

                    b.Property<int>("Frensh")
                        .HasColumnType("int");

                    b.Property<int>("Math")
                        .HasColumnType("int");

                    b.Property<int>("english")
                        .HasColumnType("int");

                    b.Property<int>("histoy_gio")
                        .HasColumnType("int");

                    b.Property<int>("student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("student_Id");

                    b.ToTable("marks");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("PrimaryConnect.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("schools");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Parent_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("School_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("School_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("School_Id")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("School_Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Teacher_Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Teacher_Id")
                        .HasColumnType("int");

                    b.Property<int>("student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Teacher_Id");

                    b.HasIndex("student_Id");

                    b.ToTable("Teacher_Students");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Absence", b =>
                {
                    b.HasOne("PrimaryConnect.Models.Student", "student")
                        .WithMany("absences")
                        .HasForeignKey("student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Administrator", b =>
                {
                    b.HasOne("PrimaryConnect.Models.School", null)
                        .WithMany("administrators")
                        .HasForeignKey("SchoolId");

                    b.HasOne("PrimaryConnect.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("School_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Courses", b =>
                {
                    b.HasOne("PrimaryConnect.Models.Student", null)
                        .WithMany("Courses")
                        .HasForeignKey("StudentId");

                    b.HasOne("PrimaryConnect.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("Teacher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrimaryConnect.Models.Student", "student")
                        .WithMany()
                        .HasForeignKey("student_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("student");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Event_Student", b =>
                {
                    b.HasOne("PrimaryConnect.Models.Event", "Event_P")
                        .WithMany("envent_student")
                        .HasForeignKey("Event_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrimaryConnect.Models.Student", "student")
                        .WithMany("envent_student")
                        .HasForeignKey("student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event_P");

                    b.Navigation("student");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Marks", b =>
                {
                    b.HasOne("PrimaryConnect.Models.Student", "student")
                        .WithMany("marks")
                        .HasForeignKey("student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Student", b =>
                {
                    b.HasOne("PrimaryConnect.Models.Parent", null)
                        .WithMany("students")
                        .HasForeignKey("ParentId");

                    b.HasOne("PrimaryConnect.Models.Parent", "parent")
                        .WithMany()
                        .HasForeignKey("Parent_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrimaryConnect.Models.School", null)
                        .WithMany("students")
                        .HasForeignKey("SchoolId");

                    b.HasOne("PrimaryConnect.Models.School", "school")
                        .WithMany()
                        .HasForeignKey("School_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("parent");

                    b.Navigation("school");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Teacher", b =>
                {
                    b.HasOne("PrimaryConnect.Models.School", null)
                        .WithMany("teachers")
                        .HasForeignKey("SchoolId");

                    b.HasOne("PrimaryConnect.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("School_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Teacher_Student", b =>
                {
                    b.HasOne("PrimaryConnect.Models.Teacher", "Teacher")
                        .WithMany("Teachers_students")
                        .HasForeignKey("Teacher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrimaryConnect.Models.Student", "student")
                        .WithMany("Teachers_students")
                        .HasForeignKey("student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("student");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Event", b =>
                {
                    b.Navigation("envent_student");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Parent", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("PrimaryConnect.Models.School", b =>
                {
                    b.Navigation("administrators");

                    b.Navigation("students");

                    b.Navigation("teachers");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Student", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Teachers_students");

                    b.Navigation("absences");

                    b.Navigation("envent_student");

                    b.Navigation("marks");
                });

            modelBuilder.Entity("PrimaryConnect.Models.Teacher", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Teachers_students");
                });
#pragma warning restore 612, 618
        }
    }
}
